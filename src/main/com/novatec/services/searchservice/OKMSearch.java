
package com.novatec.services.searchservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OKMSearch", targetNamespace = "http://ws.openkm.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OKMSearch {


    /**
     * 
     * @param token
     * @param params
     * @return
     *     returns long
     * @throws AccessDeniedException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveSearch", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.SaveSearch")
    @ResponseWrapper(localName = "saveSearchResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.SaveSearchResponse")
    public long saveSearch(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "params", targetNamespace = "")
        QueryParams params)
        throws AccessDeniedException_Exception, DatabaseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param qpId
     * @param token
     * @throws AccessDeniedException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "deleteSearch", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.DeleteSearch")
    @ResponseWrapper(localName = "deleteSearchResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.DeleteSearchResponse")
    public void deleteSearch(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qpId", targetNamespace = "")
        int qpId)
        throws AccessDeniedException_Exception, DatabaseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param qpId
     * @param token
     * @return
     *     returns com.novatec.services.searchservice.QueryParams
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     * @throws PathNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getSearch", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetSearch")
    @ResponseWrapper(localName = "getSearchResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetSearchResponse")
    public QueryParams getSearch(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "qpId", targetNamespace = "")
        int qpId)
        throws DatabaseException_Exception, PathNotFoundException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @param name
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.QueryResult>
     * @throws ParseException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByName", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByNameResponse")
    public List<QueryResult> findByName(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "name", targetNamespace = "")
        String name)
        throws DatabaseException_Exception, IOException_Exception, ParseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @param params
     * @throws AccessDeniedException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "updateSearch", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.UpdateSearch")
    @ResponseWrapper(localName = "updateSearchResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.UpdateSearchResponse")
    public void updateSearch(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "params", targetNamespace = "")
        QueryParams params)
        throws AccessDeniedException_Exception, DatabaseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param keywords
     * @param token
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.QueryResult>
     * @throws ParseException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByKeywords", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByKeywords")
    @ResponseWrapper(localName = "findByKeywordsResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByKeywordsResponse")
    public List<QueryResult> findByKeywords(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "keywords", targetNamespace = "")
        List<String> keywords)
        throws DatabaseException_Exception, IOException_Exception, ParseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @param params
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.QueryResult>
     * @throws ParseException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindResponse")
    public List<QueryResult> find(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "params", targetNamespace = "")
        QueryParams params)
        throws DatabaseException_Exception, IOException_Exception, ParseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param content
     * @param token
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.QueryResult>
     * @throws ParseException_Exception
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByContent", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByContent")
    @ResponseWrapper(localName = "findByContentResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.FindByContentResponse")
    public List<QueryResult> findByContent(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws DatabaseException_Exception, IOException_Exception, ParseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @param categoryId
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.Document>
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCategorizedDocuments", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetCategorizedDocuments")
    @ResponseWrapper(localName = "getCategorizedDocumentsResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetCategorizedDocumentsResponse")
    public List<Document> getCategorizedDocuments(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "categoryId", targetNamespace = "")
        String categoryId)
        throws DatabaseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @param filter
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.IntegerPair>
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getKeywordMap", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetKeywordMap")
    @ResponseWrapper(localName = "getKeywordMapResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetKeywordMapResponse")
    public List<IntegerPair> getKeywordMap(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "filter", targetNamespace = "")
        List<String> filter)
        throws DatabaseException_Exception, RepositoryException_Exception
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.util.List<com.novatec.services.searchservice.QueryParams>
     * @throws DatabaseException_Exception
     * @throws RepositoryException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllSearchs", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetAllSearchs")
    @ResponseWrapper(localName = "getAllSearchsResponse", targetNamespace = "http://ws.openkm.com", className = "com.novatec.services.searchservice.GetAllSearchsResponse")
    public List<QueryParams> getAllSearchs(
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws DatabaseException_Exception, RepositoryException_Exception
    ;

}
